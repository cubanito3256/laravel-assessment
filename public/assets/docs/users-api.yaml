swagger: "2.0"
info:
  description: "This is the API definition for the Users Api. `Boalt assessment`"
  version: "1.0"
  title: "Users Api Definition"
  contact:
    email: "miguel.garcia78@gmail.com"
host: "localhost:8000"
basePath: "/api"
tags:
- name: "Users"
  description: "Users-related endpoints"
- name: "Notifications"
  description: "Notification-related endpoints"
- name: "External APIs"
  description: "External APIs-related endpoints"
schemes:
- "http"
paths:
  "/user":
    post:
      tags:
      - "Users"
      summary: "Creates a new User"
      operationId: "addUser"
      parameters:
      - name: "body"
        in: "body"
        description: "User model"
        required: true
        schema:
          $ref: "#/definitions/UserSignUp"
      responses:
        200:
          description: "Ok"
        422:
          description: "Validation error"
            
    get:
      tags:
        - "Users"
      summary: "Returns current user information"
      operationId: "currentUser"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized"

  "/user/login":
    post:
      tags:
      - "Users"
      summary: "User SignIn"
      operationId: "loginUser"
      parameters:
      - name: "body"
        in: "body"
        description: "User signin model"
        required: true
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        200:
          description: "Ok"
          schema:
            type: "string"
            description: "Bearer token"
        401:
          description: "Unauthorized, wrong username or password"
        403:
          description: "Forbidden, user is disabled"
            
  "/notification":
    get:
      tags:
      - "Notifications"
      summary: "Returns notifications sent to the logged-in user"
      operationId: "getNotifications"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NotificationList"
        401:
          description: "Unauthorized, wrong username or password"
        403:
          description: "Forbidden, user is disabled"
            
  "/notification/{id}":
    get:
      tags:
      - "Notifications"
      summary: "Returns specific notification message, sent to the current user. When called, it will mark the notification as read"
      operationId: "getNotification"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      - name: "id"
        in: "path"
        description: "Notification ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "Ok"
          schema:
            $ref: "#/definitions/NotificationModel"
        401:
          description: "Unauthorized, wrong username or password"
        403:
          description: "Forbidden, user is disabled"
    delete:
      tags:
      - "Notifications"
      summary: "Deletes specific notification"
      operationId: "deleteNotification"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      - name: "id"
        in: "path"
        description: "Notification ID"
        required: true
        type: "integer"
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized, user not logged-in"

  "/notification/send/{userId}":
    post:
      tags:
      - "Notifications"
      summary: "Sends a notification to a specific user"
      operationId: "sendNotification"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      - name: "userId"
        in: "path"
        description: "ID of the recipient user"
        required: true
        type: "integer"
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden, user is disabled"
        404:
          description: "Recipient user not found"
            
  "/extra/info":
    get:
      tags:
      - "External APIs"
      summary: "Returns information about business in Miami Area. Only returns business that are `open` and have a rating greater or equals 4"
      operationId: "getBusinessInfo"
      parameters:
      - name: "Authorization"
        description: "Bearer token (JWT)"
        type: "string"
        in: "header"
        required: true
        default: "Bearer "
      - name: "location"
        description: "Location to search for business. Can be a ZipCode, a city, state. If Empty will search in Miami, Florida"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "Ok"
        401:
          description: "Unauthorized"

definitions:
  UserSignUp:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"

  UserLogin:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
        default: "password"
        
  NotificationList:
    type: "object"
    properties:
      id:
        type: "integer"
      message:
        type: "string"
      status:
        type: "string"
        enum: ["read", "unread"]
        
  NotificationModel:
    type: "object"
    required:
      - "message"
    properties:
      message:
        type: "string"
